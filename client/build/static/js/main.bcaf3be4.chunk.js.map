{"version":3,"sources":["images/cine-defaut-1.jpg","Components/Navbar.js","Components/MovieItem.js","Components/MovieList.js","Components/Home.js","Components/Authentication.js","Components/MovieForm.js","Components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","logout","bind","addUserToState","this","has","message","isLoggedIn","className","id","to","onClick","Component","MovieItem","name","desc","movieId","userId","token","removeMoviesFromState","movieImgUrl","deleteMovie","a","url","fetch","method","headers","then","res","json","deletedMovie","_id","src","noImage","style","width","height","MovieList","state","userMovies","setState","dataFromMovieItem","filter","m","length","movieList","map","key","description","Home","username","Authentication","apiCall","e","btnText","toLowerCase","preventDefault","body","JSON","stringify","response","user","err","localStorage","setItem","password","email","history","push","console","log","handleChange","target","value","signUp","error","onSubmit","htmlFor","required","type","onChange","MovieForm","sendMovie","Main","exact","path","render","App","checkForUser","getItem","logOutUser","bool","dataFromAuth","errFromAuth","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"4HAAAA,EAAOC,QAAU,IAA0B,2C,gQCsD5BC,E,kDAhDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,OAAS,EAAKA,OAAOC,KAAZ,gBAFC,E,sDAOfC,EADyBC,KAAKJ,MAAvBG,iBACQ,EAAM,GAAG,CAACE,KAAI,EAAMC,QAAQ,O,+BAKpC,IACAC,EAAcH,KAAKJ,MAAnBO,WAEP,OACI,6BACI,yBAAKC,UAAU,uCAAuCC,GAAG,OACrD,yBAAKD,UAAU,mBACX,kBAAC,IAAD,CACAE,GAAG,IACHF,UAAU,gBAFV,QAKA,wBAAIA,UAAU,uCACK,IAAbD,GACE,wBAAIC,UAAU,YACd,kBAAC,IAAD,CAAME,GAAG,UAAUF,UAAU,YAA7B,WAGW,IAAbD,GACE,wBAAIC,UAAU,YACV,4BAAQA,UAAU,cAAcG,QAASP,KAAKH,QAA9C,WAGR,wBAAIO,UAAU,YACV,kBAAC,IAAD,CAAME,GAAG,YAAYF,UAAU,YAA/B,qB,GArCXI,a,OC8BNC,EAhCG,SAAC,GAAwE,IAAvEC,EAAsE,EAAtEA,KAAKC,EAAiE,EAAjEA,KAAKC,EAA4D,EAA5DA,QAAQC,EAAoD,EAApDA,OAAOC,EAA6C,EAA7CA,MAAMC,EAAuC,EAAvCA,sBAAsBC,EAAiB,EAAjBA,YAC/DC,EAAW,uCAAG,4BAAAC,EAAA,6DACXC,EADW,oBACQN,EADR,mBACyBD,GADzB,kBAGNQ,MAAMD,EAAI,CACZE,OAAO,SACPC,QAAS,CACL,eAAiB,mBACjB,+BAA4BR,MAGnCS,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAY,OAAIX,EAAsBW,EAAaC,QAX7C,yHAAH,qDAiBjB,OACI,yBAAKvB,UAAU,mBACV,yBACDwB,IAAOZ,GAAea,IACtBC,MAAS,CAACC,MAAM,QAAQC,OAAO,WAE/B,4BAAKtB,EAAL,MAAcC,GAEd,4BAAQP,UAAU,iBAAiBG,QAASU,GAA5C,YC+BGgB,E,kDAxDX,WAAYrC,GAAO,IAAD,8BACd,cAAMA,IACDsC,MAAQ,CACTC,WAAa,IAHH,E,gEAQG,IAAD,OACVhB,EAAG,6DAAyDnB,KAAKJ,MAAMiB,OAApE,YACTO,MAAOD,EAAI,CACPE,OAAQ,MACRC,QAAS,CACL,eAAiB,mBACjB,+BAA4BtB,KAAKJ,MAAMkB,UAG9CS,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAY,GAAU,OAAE,EAAKC,SAAS,CAACD,WAAaA,S,4CAG5BE,GAClBrC,KAAKoC,SAAS,CACVD,WAAWnC,KAAKkC,MAAMC,WAAWG,QAAO,SAAAC,GAAC,OAAEA,EAAEZ,MAAQU,S,+BAKnD,IAAD,OACL,GAAoC,IAAjCrC,KAAKkC,MAAMC,WAAWK,OACrB,OACE,kDAGN,IACIC,EADWzC,KAAKkC,MAAMC,WACHO,KAAI,SAAAH,GAAC,OACpB,kBAAC,EAAD,CACAzB,MAAO,EAAKlB,MAAMkB,MAClBD,OAAQ,EAAKjB,MAAMiB,OACnBG,YAAauB,EAAEvB,YACfJ,QAAS2B,EAAEZ,IACXgB,IAAKJ,EAAEZ,IACPjB,KAAO6B,EAAE7B,KACTC,KAAM4B,EAAEK,YACR7B,sBAAuB,EAAKA,sBAAsBjB,KAAK,QAGhE,OACG,6BAAM2C,O,GAjDQjC,aC+BTqC,EA5BF,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,SAAS3C,EAA6B,EAA7BA,WAAWU,EAAkB,EAAlBA,OAAOC,EAAW,EAAXA,MACtC,OAAmB,IAAfX,EAEI,yBAAKC,UAAU,WACX,8CACA,iEACA,kBAAC,IAAD,CAAME,GAAG,aACT,4BAAQF,UAAU,mBAAlB,cAOJ,yBAAKA,UAAU,WACf,yCAAe0C,GACf,wEACA,kBAAC,EAAD,CAAWjC,OAAQA,EAAQC,MAAOA,IAClC,kBAAC,IAAD,CAAMR,GAAG,WACL,4BAAQF,UAAU,mBAAlB,sB,QCsFD2C,E,kDA3GX,WAAYnD,GAAO,IAAD,8BACd,cAAMA,IAmBVoD,QApBkB,uCAoBR,WAAOC,GAAP,mBAAA/B,EAAA,6DAECnB,EAAkB,EAAKH,MAAvBG,eACDmD,EAAU,EAAKtD,MAAMsD,QAAQC,cAC/BF,EAAEG,iBACIjC,EALJ,4DAK+D+B,GAL/D,SAMI9B,MAAOD,EAAI,CACbE,OAAO,OACPC,QAAS,CACL,eAAiB,oBAErB+B,KAAMC,KAAKC,UAAU,EAAKrB,SAG7BX,MAAK,SAAAiC,GAAQ,OAAIA,EAAS/B,UAC1BF,MAAK,SAACkC,GACAA,EAAKC,IACJ3D,GAAe,EAAM,GAAG,CAACE,KAAI,EAAKC,QAAQuD,EAAKC,IAAIxD,WAGnDH,GAAe,EAAK0D,EAAK,CAACxD,KAAI,EAAMC,QAAQ,KAC5CyD,aAAaC,QAAQ,QAAQH,EAAK3C,OAClC6C,aAAaC,QAAQ,WAAWH,EAAKI,UACrCF,aAAaC,QAAQ,QAAQH,EAAKK,OAClC,EAAKlE,MAAMmE,QAAQC,KAAK,KACxBC,QAAQC,IAAIT,OAInBlC,KAAK,EAAKa,SAAS,CAChBU,SAAU,GACVe,SAAU,GACVC,MAAO,MAhCT,2CApBQ,sDAEd,EAAK5B,MAAQ,CACTY,SAAU,GACVe,SAAU,GACVC,MAAO,IAGX,EAAKK,aAAe,EAAKA,aAAarE,KAAlB,gBARN,E,yDAYJmD,GACVjD,KAAKoC,SAAL,eACKa,EAAEmB,OAAO1D,KAAQuC,EAAEmB,OAAOC,U,+BA6CzB,IAAD,EAC0BrE,KAAKJ,MAA7B0E,EADF,EACEA,OAAOpB,EADT,EACSA,QAAQqB,EADjB,EACiBA,MACtB,OACG,yBAAKnE,UAAU,6CACV,yBAAKA,UAAU,YACX,0BAAMoE,SAAUxE,KAAKgD,SACjB,2BAAOyB,QAAQ,SAAf,SACA,2BACAC,UAAU,EACVtE,UAAU,eACVuE,KAAK,QACLN,MAAOrE,KAAKkC,MAAM4B,MAClBpD,KAAK,QACLkE,SAAU5E,KAAKmE,eAEf,2BAAOM,QAAQ,YAAf,YACA,2BACAC,UAAU,EACVtE,UAAU,eACVuE,KAAK,WACLN,MAAOrE,KAAKkC,MAAM2B,SAClBnD,KAAK,WACLkE,SAAU5E,KAAKmE,eAEdG,GACG,6BACI,2BAAOG,QAAQ,YAAf,YACA,2BACAC,UAAU,EACVtE,UAAU,eACVuE,KAAK,OACLN,MAAOrE,KAAKkC,MAAMY,SAClBpC,KAAK,WACLkE,SAAU5E,KAAKmE,gBAItBI,GACI,yBAAKnE,UAAU,sBAAsBmE,GAE1C,4BAAQnE,UAAU,mCAAmCuE,KAAK,UAAUzB,U,GApG/D1C,aCmFdqE,E,kDAnFX,WAAYjF,GAAO,IAAD,8BACd,cAAMA,IAiBVkF,UAlBkB,uCAkBN,WAAO7B,GAAP,qBAAA/B,EAAA,+DACe,EAAKtB,MAArBiB,EADC,EACDA,OAAOC,EADN,EACMA,MACdmC,EAAEG,iBACIjC,EAHE,oBAGiBN,EAHjB,oBAIFO,MAAMD,EAAI,CACZE,OAAS,OACTC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BR,IAE/BuC,KAAOC,KAAKC,UAAU,EAAKrB,SAE9BX,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,KAAK,EAAK3B,MAAMmE,QAAQC,KAAK,MAbtB,2CAlBM,sDAEd,EAAK9B,MAAQ,CACTxB,KAAO,GACPkC,YAAc,GACd5B,YAAc,IAElB,EAAK8D,UAAU,EAAKA,UAAUhF,KAAf,gBACf,EAAKqE,aAAe,EAAKA,aAAarE,KAAlB,gBARN,E,yDAYJmD,GACVjD,KAAKoC,SAAL,eACKa,EAAEmB,OAAO1D,KAAQuC,EAAEmB,OAAOC,U,+BAsB/B,OAAkB,IADGrE,KAAKJ,MAAnBO,WAGC,yBAAKC,UAAU,6CACf,yBAAKA,UAAU,YACX,0BAAMoE,SAAUxE,KAAK8E,WACjB,2BAAOL,QAAQ,QAAf,QACA,2BACIrE,UAAU,eACVuE,KAAK,OACLN,MAAOrE,KAAKkC,MAAMxB,KAClBA,KAAK,OACLkE,SAAU5E,KAAKmE,eAEnB,2BAAOM,QAAQ,eAAf,eACA,2BACIrE,UAAU,eACVuE,KAAK,OACLN,MAAOrE,KAAKkC,MAAMU,YAClBlC,KAAK,cACLkE,SAAU5E,KAAKmE,eAEnB,2BAAOM,QAAQ,eAAf,eACA,2BACIrE,UAAU,eACVuE,KAAK,OACLN,MAAOrE,KAAKkC,MAAMlB,YAClBN,KAAK,cACLkE,SAAU5E,KAAKmE,eAInB,4BAAQ/D,UAAU,mCAAmCuE,KAAK,UAA1D,UAOR,6E,GA3EQnE,aCwCTuE,EApCF,SAACnF,GAAW,IACbO,EAAyDP,EAAzDO,WAAWJ,EAA8CH,EAA9CG,eAAe+C,EAA+BlD,EAA/BkD,SAASjC,EAAsBjB,EAAtBiB,OAAOC,EAAelB,EAAfkB,MAAMyD,EAAS3E,EAAT2E,MACpD,OACI,yBAAKnE,UAAU,aACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO4E,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAAtF,GAAK,OAAI,kBAAC,EAAD,eACvCiB,OAAQA,EACRV,WAAYA,EACZ2C,SAAUA,EACVhC,MAAOA,GACHlB,OACJ,kBAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,UAAUC,OAAU,SAAAtF,GAAK,OAAI,kBAAC,EAAD,eAC/C2E,MAAOA,EACPrB,QAAQ,SACR/C,WAAYA,EACZJ,eAAgBA,GACZH,OACJ,kBAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,YAAYC,OAAU,SAAAtF,GAAK,OAAI,kBAAC,EAAD,eACjD0E,QAAM,EACNC,MAAOA,EACPrB,QAAQ,WACR/C,WAAYA,EACZJ,eAAgBA,GACZH,OACJ,kBAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,UAAUC,OAAU,SAAAtF,GAAK,OAAG,kBAAC,EAAD,eAC9CO,WAAYA,EACZU,OAAQA,EACRC,MAAOA,EACPf,eAAgBA,GACZH,UC4DTuF,E,kDAxFX,WAAYvF,GAAQ,IAAD,8BACjB,cAAOA,IAgBTwF,aAjBmB,sBAiBJ,kCAAAlE,EAAA,iIAGL4C,EAAQH,aAAa0B,QAAQ,SAC7BxB,EAAWF,aAAa0B,QAAQ,YAJ3B,SAKOjE,MALP,2DAKkB,CAC3BC,OAAO,OACPC,QAAU,CACR,eAAiB,oBAEnB+B,KAAKC,KAAKC,UAAUO,EAAMD,KAVjB,cAKLrC,EALK,gBAYQA,EAAIC,OAZZ,OAYLgC,EAZK,OAaX,EAAKrB,SAAS,CAACjC,YAAW,EAAKsD,OAAKc,MAAM,CAACtE,KAAI,EAAMC,QAAQ,MAblD,kDAeX,EAAKkC,SAAS,CAACjC,YAAW,EAAMsD,KAAK,GAAGc,MAAM,CAACtE,KAAI,EAAKC,QAAQ,KAAIA,WACpE+D,QAAQC,IAAR,MAhBW,0DAfb,EAAKhC,MAAQ,CACX/B,YAAY,EACZsD,KAAO,GACPc,MAAO,CACLtE,KAAM,EACNC,QAAU,KAIZ,EAAKH,eAAe,EAAKA,eAAeD,KAApB,gBACpB,EAAKwF,WAAW,EAAKA,WAAWxF,KAAhB,gBAChB,EAAKsF,aAAa,EAAKA,aAAatF,KAAlB,gBAbH,E,gEAwCoB,OAAlC6D,aAAa0B,QAAQ,UAAwD,OAAnC1B,aAAa0B,QAAQ,WAC/DrF,KAAKoF,iB,qCAMMG,EAAKC,EAAaC,GAChCzF,KAAKoC,SAAS,CACZjC,WAAWoF,EACX9B,KAAO+B,EACPjB,MAAMkB,IAERxB,QAAQC,IAAIlE,KAAKkC,MAAMqC,MAAMrE,W,mCAI7BF,KAAKoC,SAAS,CACVjC,YAAY,EACZsD,KAAO,GACPc,MAAO,CACLtE,KAAM,EACNC,QAAU,Q,+BAQhB,OACI,kBAAC,IAAD,KACE,yBAAKE,UAAU,OACb,kBAAC,EAAD,CACAD,WAAYH,KAAKkC,MAAM/B,WACvBJ,eAAgBC,KAAKD,iBACrB,kBAAC,EAAD,CAAMA,eAAgBC,KAAKD,eAC3BwE,MAAOvE,KAAKkC,MAAMqC,MAAMrE,QACxB4C,SAAU9C,KAAKkC,MAAMuB,KAAKX,SAC1B3C,WAAYH,KAAKkC,MAAM/B,WACvBU,OAASb,KAAKkC,MAAMuB,KAAKpD,GACzBS,MAAQd,KAAKkC,MAAMuB,KAAK3C,c,GAlFpBN,aCMEkF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASb,OACP,kBAAC,IAAMc,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9E,MAAK,SAAA+E,GACJA,EAAaC,gBAEdC,OAAM,SAAAjC,GACLN,QAAQM,MAAMA,EAAMrE,c","file":"static/js/main.bcaf3be4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cine-defaut-1.704b37e1.jpg\";","import React, {Component} from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport Logo from \"../images/cine-defaut-1.jpg\"\r\n\r\n \r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.logout = this.logout.bind(this)\r\n }\r\n\r\n    logout() {\r\n        const {addUserToState} = this.props\r\n        addUserToState(false,{},{has:false,message:\"\"})\r\n    \r\n    }\r\n\r\n\r\n    render () {\r\n        const {isLoggedIn} = this.props\r\n     \r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm navbar-light\" id=\"nav\">\r\n                    <div className=\"container-fluid\">\r\n                        <Link \r\n                        to=\"/\" \r\n                        className=\"navbar-brand\">\r\n                        Home\r\n                        </Link>\r\n                        <ul className=\"nav navbar-nav justify-content-end\">\r\n                            {(isLoggedIn===false) && (\r\n                                <li className=\"nav-item\">\r\n                                <Link to=\"/signin\" className=\"nav-link\">Login</Link>\r\n                            </li>\r\n                            )}\r\n                            {(isLoggedIn===true) && (\r\n                                <li className=\"nav-item\">\r\n                                    <button className=\"log-out-btn\" onClick={this.logout}>Logout</button>\r\n                                </li>\r\n                            )}\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/register\" className=\"nav-link\">Register</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n           )\r\n  /* { {(isLoggedIn === false) ? \"Login\" : \"Logout\"} } */\r\n}\r\n\r\n}\r\n\r\nexport default Navbar;","import React from \"react\"\r\nimport noImage from \"../images/cine-defaut-1.jpg\"\r\n\r\nconst MovieItem = ({name,desc,movieId,userId,token,removeMoviesFromState,movieImgUrl}) => {\r\n    const deleteMovie = async () => {\r\n       const url = `api/users/${userId}/movies/${movieId}`\r\n        try {\r\n            await fetch(url,{\r\n                method:\"DELETE\",\r\n                headers: {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"Authorization\" : `Bearer ${token}`\r\n                }\r\n        })\r\n            .then(res=>res.json())\r\n            .then(deletedMovie => removeMoviesFromState(deletedMovie._id))\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"movie-container\">\r\n             <img \r\n            src = {movieImgUrl || noImage}\r\n            style = {{width:\"150px\",height:\"100px\"}}\r\n            />\r\n            <h4>{name} - {desc}</h4>\r\n           \r\n            <button className=\"btn btn-danger\" onClick={deleteMovie}>Remove</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MovieItem;","import React, { Component } from \"react\";\r\nimport MovieItem from \"./MovieItem\"\r\n\r\nclass MovieList extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userMovies : []\r\n        }\r\n       \r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = `https://fierce-spire-28320.herokuapp.com/api/users/${this.props.userId}/movies/`\r\n        fetch (url,{\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\",\r\n                \"Authorization\" : `Bearer ${this.props.token}`\r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then(userMovies=>this.setState({userMovies : userMovies}))\r\n    }\r\n    \r\n    removeMoviesFromState(dataFromMovieItem){\r\n        this.setState({\r\n            userMovies:this.state.userMovies.filter(m=>m._id !== dataFromMovieItem)\r\n        })\r\n    }\r\n\r\n    \r\n    render() {\r\n        if(this.state.userMovies.length === 0) {\r\n            return (\r\n              <h3>You have no movies</h3>\r\n          )\r\n      }\r\n        const movies = this.state.userMovies\r\n        let movieList = movies.map(m =>(\r\n                <MovieItem\r\n                token={this.props.token}\r\n                userId={this.props.userId}\r\n                movieImgUrl={m.movieImgUrl}\r\n                movieId={m._id}\r\n                key={m._id} \r\n                name ={m.name} \r\n                desc={m.description}\r\n                removeMoviesFromState={this.removeMoviesFromState.bind(this)}\r\n                />\r\n        ))\r\n       return (\r\n          <div>{movieList}</div> \r\n       )\r\n    }\r\n        \r\n}\r\n\r\n\r\n\r\nexport default MovieList;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport MovieList from \"./MovieList\"\r\n\r\n\r\n\r\nconst Home = ({username,isLoggedIn,userId,token}) => {\r\n    if (isLoggedIn === false) {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <h2>Welcome,Guest!</h2>\r\n                <h4>This is your personal ToWatchList</h4>\r\n                <Link to=\"/register\">\r\n                <button className=\"btn btn-primary\">Register</button>\r\n                </Link>\r\n               \r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"wrapper\">\r\n            <h2>Greetings {username}</h2>\r\n            <h4>Here are the movies you need to watch : </h4>\r\n            <MovieList userId={userId} token={token}/>\r\n            <Link to=\"/movies\">\r\n                <button className=\"btn btn-primary\">Add a new Movie</button>\r\n            </Link>\r\n            \r\n        </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default Home;","import React,{ Component } from \"react\";\r\n\r\n\r\nclass Authentication extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n        }\r\n        \r\n        this.handleChange = this.handleChange.bind(this)\r\n        \r\n    }\r\n\r\n    handleChange (e) {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    apiCall = async (e) => {\r\n        \r\n        const {addUserToState} = this.props\r\n        const btnText = this.props.btnText.toLowerCase()\r\n            e.preventDefault()\r\n            const url = `https://fierce-spire-28320.herokuapp.com/api/auth/${btnText}`\r\n            await fetch (url,{\r\n                method:\"POST\",\r\n                headers: {\r\n                    \"Content-type\" : \"application/json\"\r\n                },\r\n                body: JSON.stringify(this.state)\r\n               \r\n            })\r\n            .then(response => response.json())\r\n            .then((user)=> {\r\n                if(user.err) {\r\n                    addUserToState(false,{},{has:true,message:user.err.message})\r\n                    \r\n                } else {\r\n                    addUserToState(true,user,{has:false,message:\"\"})\r\n                    localStorage.setItem(\"token\",user.token)\r\n                    localStorage.setItem(\"password\",user.password)\r\n                    localStorage.setItem(\"email\",user.email)\r\n                    this.props.history.push(\"/\")\r\n                    console.log(user)\r\n                }\r\n               \r\n            })\r\n            .then(this.setState({\r\n                username: \"\",\r\n                password: \"\",\r\n                email: \"\",\r\n            })\r\n            )\r\n            \r\n        } \r\n     \r\n\r\n    render() {\r\n        const {signUp,btnText,error} = this.props\r\n        return (\r\n           <div className=\"row justify-content-md-center text-center\">\r\n                <div className=\"col-md-6\">\r\n                    <form onSubmit={this.apiCall}>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                        required={true}\r\n                        className=\"form-control\" \r\n                        type=\"email\" \r\n                        value={this.state.email} \r\n                        name=\"email\"\r\n                        onChange={this.handleChange}\r\n                        /> \r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                        required={true} \r\n                        className=\"form-control\" \r\n                        type=\"password\" \r\n                        value={this.state.password} \r\n                        name=\"password\"\r\n                        onChange={this.handleChange}\r\n                        />\r\n                        {signUp && (\r\n                            <div>\r\n                                <label htmlFor=\"username\">username</label>\r\n                                <input\r\n                                required={true}  \r\n                                className=\"form-control\" \r\n                                type=\"text\" \r\n                                value={this.state.username} \r\n                                name=\"username\"\r\n                                onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        {error && (\r\n                             <div className=\"alert alert-danger\">{error}</div>\r\n                        )}\r\n                        <button className=\"btn btn-primary btn-block btn-lg\" type=\"submit\">{btnText}</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Authentication;","import React, { Component } from \"react\"\r\n\r\nclass MovieForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name : '',\r\n            description : '',\r\n            movieImgUrl : ''\r\n        }\r\n        this.sendMovie=this.sendMovie.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n       \r\n    }\r\n\r\n    handleChange (e) {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    sendMovie = async (e) => {\r\n        const {userId,token} = this.props\r\n        e.preventDefault()\r\n        const url = `api/users/${userId}/movies`\r\n        await fetch(url,{\r\n            method : 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${token}` \r\n            },\r\n            body : JSON.stringify(this.state)\r\n        })\r\n        .then(res=>res.json())\r\n        .then(this.props.history.push(\"/\"))\r\n    }\r\n\r\n    render() {\r\n        const {isLoggedIn} = this.props\r\n        if(isLoggedIn === true) {\r\n            return (\r\n                <div className=\"row justify-content-md-center text-center\">\r\n                <div className=\"col-md-6\">\r\n                    <form onSubmit={this.sendMovie}>\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            value={this.state.name} \r\n                            name=\"name\"\r\n                            onChange={this.handleChange}\r\n                        /> \r\n                        <label htmlFor=\"description\">description</label>\r\n                        <input \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            value={this.state.description} \r\n                            name=\"description\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <label htmlFor=\"movieImgUrl\">movieImgUrl</label>\r\n                        <input \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            value={this.state.movieImgUrl} \r\n                            name=\"movieImgUrl\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                           \r\n                        \r\n                        <button className=\"btn btn-primary btn-block btn-lg\" type=\"submit\">Add</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>Please Log in/Register to vie this page!</div>\r\n                \r\n            )\r\n        }\r\n       \r\n    }\r\n}\r\n\r\n\r\nexport default MovieForm;","import React from \"react\"\r\nimport { Switch,Route } from \"react-router-dom\"\r\nimport Home from \"./Home\"\r\nimport Authentication from \"./Authentication\"\r\nimport MovieForm from \"./MovieForm\"\r\n\r\nconst Main = (props) => {\r\n     const {isLoggedIn,addUserToState,username,userId,token,error} = props\r\n        return (\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    <Route exact path=\"/\" render={props => <Home\r\n                    userId={userId} \r\n                    isLoggedIn={isLoggedIn} \r\n                    username={username}\r\n                    token={token}\r\n                    {...props}/>}/>\r\n                    <Route exact path=\"/signin\" render = {props => <Authentication\r\n                    error={error} \r\n                    btnText=\"Signin\" \r\n                    isLoggedIn={isLoggedIn} \r\n                    addUserToState={addUserToState}\r\n                    {...props}/>}/>\r\n                    <Route exact path=\"/register\" render = {props => <Authentication \r\n                    signUp\r\n                    error={error} \r\n                    btnText=\"Register\" \r\n                    isLoggedIn={isLoggedIn} \r\n                    addUserToState={addUserToState} \r\n                    {...props}/>}/>\r\n                    <Route exact path=\"/movies\" render = {props=> <MovieForm \r\n                    isLoggedIn={isLoggedIn}\r\n                    userId={userId}\r\n                    token={token}\r\n                    addUserToState={addUserToState}\r\n                    {...props}/>}/>\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from \"./Components/Navbar\" \nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Main from \"./Components/Main\"\n\nclass App extends Component {\n    constructor(props) {\n      super (props)\n      this.state = {\n        isLoggedIn: false,\n        user : {},\n        error: {\n          has : false,\n          message : \"\"\n        }\n        }\n        \n        this.addUserToState=this.addUserToState.bind(this)\n        this.logOutUser=this.logOutUser.bind(this)\n        this.checkForUser=this.checkForUser.bind(this)\n       \n      }\n    \n    checkForUser = async () => {\n      try {\n        const url =`https://fierce-spire-28320.herokuapp.com/api/auth/signin`\n        const email = localStorage.getItem(\"email\");\n        const password = localStorage.getItem(\"password\");\n        const res = await fetch (url,{\n          method:\"POST\",\n          headers : {\n            \"Content-type\" : \"application/json\"\n          },\n          body:JSON.stringify(email,password)\n        })\n        const user = await res.json()\n        this.setState({isLoggedIn:true,user,error:{has:false,message:\"\"}})\n      } catch(err) {\n        this.setState({isLoggedIn:false,user:{},error:{has:true,message:err.message}})\n        console.log(err)\n      }\n     \n    }\n\n\n    componentDidMount() {\n      if(localStorage.getItem(\"token\") !== null && localStorage.getItem(\"userId\") !== null) {\n         this.checkForUser()\n      } else {\n        return\n      }\n    }\n    \n    addUserToState (bool,dataFromAuth,errFromAuth) {\n      this.setState({\n        isLoggedIn:bool,\n        user : dataFromAuth,\n        error:errFromAuth,\n      })\n      console.log(this.state.error.message)\n    }  \n\n    logOutUser() {\n      this.setState({\n          isLoggedIn: false,\n          user : {},\n          error: {\n            has : false,\n            message : \"\"\n          }\n      })\n    }\n   \n    \n\n    render () {\n      return (\n          <Router>\n            <div className=\"App\">\n              <Navbar \n              isLoggedIn={this.state.isLoggedIn}\n              addUserToState={this.addUserToState}/>\n              <Main addUserToState={this.addUserToState}\n              error={this.state.error.message}\n              username={this.state.user.username} \n              isLoggedIn={this.state.isLoggedIn}\n              userId ={this.state.user.id}\n              token ={this.state.user.token}/>\n            </div>\n          </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}